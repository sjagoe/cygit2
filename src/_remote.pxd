# -*- coding: utf-8 -*-
#
# Copyright 2013 The cygit2 contributors
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# In addition to the permissions in the GNU General Public License,
# the authors give you unlimited permission to link the compiled
# version of this file into combinations with other programs,
# and to distribute those combinations without any restriction
# coming from the use of this file.  (The General Public License
# restrictions do apply in other respects; for example, they cover
# modification of the file, and distribution when not linked into
# a combined executable.)
#
# This file is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.

# This code was automatically generated by CWrap version 0.0.0

from _types cimport (
    git_remote,
    git_repository,
    git_refspec,
)

from _net cimport (
    git_direction,
    git_headlist_cb,
)

from _indexer cimport (
    git_transfer_progress_callback,
    git_transfer_progress,
)

from _strarray cimport git_strarray

from _transport cimport (
    git_cred_acquire_cb,
    git_transport,
)

from _oid cimport git_oid


cdef extern from "git2.h":

    ctypedef int (*git_remote_rename_problem_cb)(char *, void *)

    int git_remote_create(git_remote **out, git_repository *repo, char *name, char *url)

    int git_remote_create_inmemory(git_remote **out, git_repository *repo, char *fetch, char *url)

    int git_remote_load(git_remote **out, git_repository *repo, char *name)

    int git_remote_save(git_remote *remote)

    char *git_remote_name(git_remote *remote)

    char *git_remote_url(git_remote *remote)

    char *git_remote_pushurl(git_remote *remote)

    int git_remote_set_url(git_remote *remote, char *url)

    int git_remote_set_pushurl(git_remote *remote, char *url)

    int git_remote_add_fetch(git_remote *remote, char *refspec)

    int git_remote_get_fetch_refspecs(git_strarray *array, git_remote *remote)

    int git_remote_add_push(git_remote *remote, char *refspec)

    int git_remote_get_push_refspecs(git_strarray *array, git_remote *remote)

    void git_remote_clear_refspecs(git_remote *remote)

    size_t git_remote_refspec_count(git_remote *remote)

    git_refspec *git_remote_get_refspec(git_remote *remote, size_t n)

    int git_remote_remove_refspec(git_remote *remote, size_t n)

    int git_remote_connect(git_remote *remote, git_direction direction)

    int git_remote_ls(git_remote *remote, git_headlist_cb list_cb, void *payload)

    int git_remote_download(git_remote *remote, git_transfer_progress_callback progress_cb, void *payload)

    int git_remote_connected(git_remote *remote)

    void git_remote_stop(git_remote *remote)

    void git_remote_disconnect(git_remote *remote)

    void git_remote_free(git_remote *remote)

    int git_remote_update_tips(git_remote *remote)

    int git_remote_valid_url(char *url)

    int git_remote_supported_url(char *url)

    int git_remote_list(git_strarray *out, git_repository *repo)

    void git_remote_check_cert(git_remote *remote, int check)

    void git_remote_set_cred_acquire_cb(git_remote *remote, git_cred_acquire_cb cred_acquire_cb, void *payload)

    int git_remote_set_transport(git_remote *remote, git_transport *transport)

    cdef enum git_remote_completion_type:
        GIT_REMOTE_COMPLETION_DOWNLOAD
        GIT_REMOTE_COMPLETION_INDEXING
        GIT_REMOTE_COMPLETION_ERROR

    ctypedef git_remote_completion_type git_remote_completion_type

    cdef struct git_remote_callbacks:
        unsigned int version
        void (*progress)(char *, int, void *)
        int (*completion)(git_remote_completion_type, void *)
        int (*update_tips)(char *, git_oid *, git_oid *, void *)
        void *payload

    int git_remote_set_callbacks(git_remote *remote, git_remote_callbacks *callbacks)

    git_transfer_progress *git_remote_stats(git_remote *remote)

    cdef enum git_remote_autotag_option_t:
        GIT_REMOTE_DOWNLOAD_TAGS_AUTO
        GIT_REMOTE_DOWNLOAD_TAGS_NONE
        GIT_REMOTE_DOWNLOAD_TAGS_ALL

    git_remote_autotag_option_t git_remote_autotag(git_remote *remote)

    void git_remote_set_autotag(git_remote *remote, git_remote_autotag_option_t value)

    int git_remote_rename(git_remote *remote, char *new_name, git_remote_rename_problem_cb callback, void *payload)

    int git_remote_update_fetchhead(git_remote *remote)

    void git_remote_set_update_fetchhead(git_remote *remote, int value)

    int git_remote_is_valid_name(char *remote_name)
